name: Build

on: push

jobs:
  lint-only:
    strategy:
      matrix:
        module:
        - anomaly
        - db-protocols
        - db-stub
        - module-base
        - rocksdb
        - spec
        - structure-definition
        - terminology-service
        - thread-pool-executor-collector

    runs-on: ubuntu-20.04

    steps:
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        tools-deps: '1.10.1.716'

    - name: Setup clj-kondo
      uses: DeLaGuardo/setup-clj-kondo@master
      with:
        version: '2020.12.12'

    - name: Cache Local Maven Repo
      uses: actions/cache@v2.1.3
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-repo-${{ matrix.module }}

    - name: Check out Git repository
      uses: actions/checkout@v2.3.4

    - name: Lint
      run: make -C modules/${{ matrix.module }} lint

  test:
    strategy:
      matrix:
        module:
        - async
        - coll
        - cql
        - db
        - db-resource-store
        - db-resource-store-cassandra
        - db-tx-log
        - db-tx-log-kafka
        - executor
        - extern-terminology-service
        - fhir-client
        - fhir-path
        - fhir-structure
        - http-client
        - interaction
        - kv
        - luid
        - openid-auth
        - operation-measure-evaluate-measure
        - rest-api
        - rest-util
        - search-param-registry

    runs-on: ubuntu-20.04

    steps:
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        tools-deps: '1.10.1.716'

    - name: Setup clj-kondo
      uses: DeLaGuardo/setup-clj-kondo@master
      with:
        version: '2020.12.12'

    - name: Cache Local Maven Repo
      uses: actions/cache@v2.1.3
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-repo-${{ matrix.module }}

    - name: Check out Git repository
      uses: actions/checkout@v2.3.4

    - name: Lint
      run: make -C modules/${{ matrix.module }} lint

    - name: Test
      run: make -C modules/${{ matrix.module }} test

    - name: Test Coverage
      run: make -C modules/${{ matrix.module }} test-coverage

    - name: Codecov Upload
      uses: codecov/codecov-action@master
      with:
        name: ${{ matrix.module }}
        file: modules/${{ matrix.module }}/target/coverage/codecov.json
        fail_ci_if_error: true

  test-root:
    runs-on: ubuntu-20.04

    steps:
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        tools-deps: '1.10.1.716'

    - name: Setup clj-kondo
      uses: DeLaGuardo/setup-clj-kondo@master
      with:
        version: '2020.12.12'

    - name: Cache Local Maven Repo
      uses: actions/cache@v2.1.3
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-repo-root

    - name: Check out Git repository
      uses: actions/checkout@v2.3.4

    - name: Lint
      run: make lint-root

    - name: Test
      run: make test-root

  build:
    needs: [ lint-only, test, test-root ]
    runs-on: ubuntu-20.04

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ghcr.io/samply/blaze:latest

  load-test:
    needs: build
    runs-on: ubuntu-20.04

    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Pull Docker Image
      run: docker pull ghcr.io/samply/blaze:latest

    - name: Run Blaze
      run: docker run --name blaze --rm -d -p 8080:8080 -v blaze-data:/app/data ghcr.io/samply/blaze:latest

    - name: Sleep
      run: sleep 30

    - name: Docker Logs
      run: docker logs blaze

    - name: Fetch Capability Statement
      run: curl -s http://localhost:8080/fhir/metadata | jq .software

    - name: Docker Stop
      run: docker stop blaze
