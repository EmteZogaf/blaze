name: Build

on: push

jobs:
  lint:
    runs-on: ubuntu-20.04

    steps:
    - name: Setup clj-kondo
      uses: DeLaGuardo/setup-clj-kondo@master
      with:
        version: '2021.02.28'

    - name: Check out Git repository
      uses: actions/checkout@v2.3.4

    - name: Lint
      run: make lint

  test:
    needs: [ lint ]

    strategy:
      matrix:
        module:
        - async
        - coll
        - cql
        - db
        - db-resource-store
        - db-resource-store-cassandra
        - db-tx-log
        - db-tx-log-kafka
        - executor
        - extern-terminology-service
        - fhir-client
        - fhir-path
        - fhir-structure
        - http-client
        - interaction
        - kv
        - luid
        - openid-auth
        - operation-measure-evaluate-measure
        - rest-api
        - rest-util
        - search-param-registry

        java-version:
        - '11'
        - '15'

    runs-on: ubuntu-20.04

    steps:
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        tools-deps: '1.10.1.716'

    - name: Cache Local Maven Repo
      uses: actions/cache@v2.1.3
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-${{ matrix.java-version }}-maven-repo-test-${{ matrix.module }}

    - name: Check out Git repository
      uses: actions/checkout@v2.3.4

    - name: Test
      run: make -C modules/${{ matrix.module }} test

  test-coverage:
    needs: [ test ]

    strategy:
      matrix:
        module:
        - async
        - coll
        - cql
        - db
        - db-resource-store
        - db-resource-store-cassandra
        - db-tx-log
        - db-tx-log-kafka
        - executor
        - extern-terminology-service
        - fhir-client
        - fhir-path
        - fhir-structure
        - http-client
        - interaction
        - kv
        - luid
        - openid-auth
        - operation-measure-evaluate-measure
        - rest-api
        - rest-util
        - search-param-registry

    runs-on: ubuntu-20.04

    steps:
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        tools-deps: '1.10.1.716'

    - name: Cache Local Maven Repo
      uses: actions/cache@v2.1.3
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-${{ matrix.java-version }}-maven-repo-test-coverage-${{ matrix.module }}

    - name: Check out Git repository
      uses: actions/checkout@v2.3.4

    - name: Test Coverage
      run: make -C modules/${{ matrix.module }} test-coverage

    - name: Codecov Upload
      uses: codecov/codecov-action@master
      with:
        name: ${{ matrix.module }}
        file: modules/${{ matrix.module }}/target/coverage/codecov.json
        fail_ci_if_error: true

  test-root:
    needs: [ lint ]

    strategy:
      matrix:
        java-version:
        - '11'
        - '15'

    runs-on: ubuntu-20.04

    steps:
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@master
      with:
        tools-deps: '1.10.1.716'

    - name: Cache Local Maven Repo
      uses: actions/cache@v2.1.3
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-${{ matrix.java-version }}-maven-repo-test-root

    - name: Check out Git repository
      uses: actions/checkout@v2.3.4

    - name: Test
      run: make test-root

  build:
    needs: [ test, test-root ]
    runs-on: ubuntu-20.04

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ghcr.io/samply/blaze:${{ github.sha }}

  integration-test:
    needs: build
    runs-on: ubuntu-20.04

    steps:
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Pull Docker Image
      run: docker pull ghcr.io/samply/blaze:${{ github.sha }}

    - name: Run Blaze
      run: docker run --name blaze --rm -d -p 8080:8080 -v blaze-data:/app/data ghcr.io/samply/blaze:${{ github.sha }}

    - name: Check out Git repository
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 15

    - name: Download Synthea
      run: curl -sLO https://github.com/synthetichealth/synthea/releases/download/v2.7.0/synthea-with-dependencies.jar

    - name: Generate Data
      run: java -jar synthea-with-dependencies.jar -s 93254876 -cs 238756253 -r 20210101 -p 100 --generate.only_alive_patients=true

    - name: Install Blazectl
      run: .github/scripts/install-blazectl.sh

    - name: Docker Logs
      run: docker logs blaze

    - name: Check Capability Statement
      run: .github/scripts/check-capability-statement.sh

    - name: Load Data
      run: ./blazectl --server http://localhost:8080/fhir upload output/fhir

    - name: Count Resources
      run: ./blazectl --server http://localhost:8080/fhir count-resources

    - name: Download Patient Resources
      run: .github/scripts/download-resources.sh Patient 100

    - name: Download Observation Resources
      run: .github/scripts/download-resources.sh Observation 28801

    - name: Download Condition Resources
      run: .github/scripts/download-resources.sh Condition 1255

    - name: Download DiagnosticReport Resources
      run: .github/scripts/download-resources.sh DiagnosticReport 7324

    - name: Docker Stop
      run: docker stop blaze
