name: Build

on: push

jobs:
  lint-only:
    strategy:
      matrix:
        module:
        - anomaly
        - db-protocols
        - db-stub
        - extern-terminology-service
        - fhir-client
        - kv
        - module-base
        - rocksdb
        - spec
        - structure-definition
        - terminology-service
        - thread-pool-executor-collector

    runs-on: ubuntu-latest

    steps:
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@2.0
      with:
        tools-deps: '1.10.1.469'

    - name: Setup clj-kondo
      uses: DeLaGuardo/setup-clj-kondo@v1
      with:
        version: '2020.09.09'

    - name: Cache Local Maven Repo
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-repo-${{ matrix.module }}

    - name: Check out Git repository
      uses: actions/checkout@v2

    - name: Lint
      run: make -C modules/${{ matrix.module }} lint

  test:
    strategy:
      matrix:
        module:
        - coll
        - cql
        - db
        - db-resource-store
        - db-resource-store-cassandra
        - db-tx-log
        - db-tx-log-kafka
        - executor
        - fhir-path
        - fhir-structure
        - interaction
        - openid-auth
        - operation-measure-evaluate-measure
        - rest-api
        - rest-util
        - search-param-registry

    runs-on: ubuntu-latest

    steps:
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        java-package: jdk

    - name: Setup Clojure
      uses: DeLaGuardo/setup-clojure@2.0
      with:
        tools-deps: '1.10.1.469'

    - name: Setup clj-kondo
      uses: DeLaGuardo/setup-clj-kondo@v1
      with:
        version: '2020.09.09'

    - name: Cache Local Maven Repo
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
        key: ${{ runner.os }}-maven-repo-${{ matrix.module }}

    - name: Check out Git repository
      uses: actions/checkout@v2

    - name: Lint
      run: make -C modules/${{ matrix.module }} lint

    - name: Test
      run: make -C modules/${{ matrix.module }} test

    #- name: Test Coverage
    #  run: make -C modules/${{ matrix.module }} test-coverage
    #
    #- name: Codecov Upload
    #  uses: codecov/codecov-action@v1
    #  with:
    #    name: ${{ matrix.module }}
    #    file: modules/${{ matrix.module }}/target/coverage/codecov.json
    #    flags: ${{ matrix.module }}
    #    fail_ci_if_error: true

  build:
    needs: [ lint-only, test ]
    runs-on: ubuntu-latest

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2

    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        repository: samply/blaze/main
        registry: docker.pkg.github.com
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        tag_with_ref: true

  load-test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2

    - name: Build Run Blaze Action
      run: cd .github/actions/run-blaze && npm i && npm run build

    - name: Run Blaze
      uses: ./.github/actions/run-blaze
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Run
      run: curl -s http://localhost:8080/fhir/metadata
